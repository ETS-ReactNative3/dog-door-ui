{"version":3,"sources":["components/home/DogDoor.png","components/home/home.js","components/about/about.js","components/contact/contact.js","components/drawer/constants.ts","components/drawer/drawer.tsx","App.js","index.js"],"names":["Home","className","src","dogDoorLogo","alt","About","Contact","INTERACTIONS_AFFORDANCE","POSITIONS","FOCUSABLE_ELEMENTS_SELECTORS","join","Drawer","React","Component","constructor","props","super","drawerRef","initiallyFocusedElement","focusOnContent","focusable","this","current","querySelector","focus","handleOpen","setFocusOnOpen","document","activeElement","ANIMATION_DELAY","setTimeout","handleClose","propsChanged","affordance","returnFocusSelector","setFocusOnClose","onClose","elementToFocus","handleOverlayClick","OVERLAY","console","log","renderOverlay","isOpen","drawerOverlayClassName","overlayClassName","cn","data-auto","onClick","renderDrawer","position","children","titleElementId","drawerClassName","start","end","ref","role","aria-modal","aria-hidden","aria-labelledby","tabIndex","createRef","componentDidUpdate","prevProps","isOpening","isClosing","render","defaultProps","App","state","onToggle","setState","exact","path","component","hydrate","getElementById"],"mappings":"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","file":"static/js/main.f7dcbfa7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/DogDoor.6a7399e2.png\";","import React from \"react\";\nimport dogDoorLogo from \"./DogDoor.png\";\n\nimport \"./home.scss\";\n\nconst Home = () => {\n  return (\n    <>\n      <div className=\"image\">\n        <div className=\"image__overlay\">\n          <img src={dogDoorLogo} alt=\"dog door logo\" />\n          <h1>Coming soon!</h1>\n        </div>\n      </div>\n      {/* <div className=\"about\">\n        <p>fun</p>\n      </div>\n      <div className=\"footer\"></div> */}\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nimport \"./about.scss\";\n\nconst About = () => {\n  return (\n    <div className=\"about\">\n      <p>About</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nimport \"./contact.scss\";\n\nconst Contact = () => {\n  return (\n    <div className=\"contact\">\n      <p>Contact</p>\n    </div>\n  );\n};\n\nexport default Contact;\n","export enum INTERACTIONS_AFFORDANCE {\n  ESC = \"Escape key\",\n  OVERLAY = \"Overlay\"\n}\n","import React from \"react\";\nimport cn from \"classnames\";\nimport { INTERACTIONS_AFFORDANCE } from \"./constants\";\nimport \"./drawer.scss\";\n\nenum POSITIONS {\n  start = \"start\",\n  end = \"end\"\n}\n\nconst FOCUSABLE_ELEMENTS_SELECTORS = [\n  \"button\",\n  \"[href]\",\n  \"input\",\n  \"select\",\n  \"textarea\",\n  \"[tabindex]:not([tabindex='-1'])\"\n].join(\", \");\n\nexport interface DrawerProps {\n  children: React.ReactNode;\n  className?: string;\n  isOpen?: boolean;\n  onClose(affordance: string | undefined): void;\n  position: keyof typeof POSITIONS;\n  setFocusOnOpen?: boolean;\n  setFocusOnClose?: boolean;\n  titleElementId: string;\n  returnFocusSelector?: string;\n}\n\nclass Drawer extends React.Component<DrawerProps> {\n  static drawerClassName = \"drawer\";\n  static drawerOverlayClassName = \"drawer-overlay\";\n  static POSITIONS = POSITIONS;\n  static defaultProps = {\n    isOpen: false,\n    setFocusOnOpen: true,\n    setFocusOnClose: true,\n    className: \"\",\n    position: \"start\",\n    returnFocusSelector: \"\"\n  };\n\n  drawerRef: React.RefObject<HTMLDivElement>;\n\n  private initiallyFocusedElement?: Element | null;\n\n  constructor(props: DrawerProps) {\n    super(props);\n    this.drawerRef = React.createRef();\n  }\n\n  componentDidUpdate(prevProps: DrawerProps) {\n    const isOpening = !prevProps.isOpen && this.props.isOpen;\n    const isClosing = prevProps.isOpen && !this.props.isOpen;\n    if (isOpening) {\n      this.handleOpen();\n    }\n    if (isClosing) {\n      this.handleClose(true);\n    }\n  }\n\n  // componentWillUnmount() {\n  //   document.removeEventListener(\"keydown\", this.handleKeyDown);\n  // }\n\n  focusOnContent = () => {\n    let focusable;\n\n    if (this.drawerRef.current) {\n      focusable = this.drawerRef.current.querySelector<HTMLElement>(\n        FOCUSABLE_ELEMENTS_SELECTORS\n      );\n    }\n\n    if (focusable) {\n      focusable.focus();\n    }\n  };\n\n  handleOpen = () => {\n    const { setFocusOnOpen } = this.props;\n\n    this.initiallyFocusedElement = document.activeElement;\n\n    if (setFocusOnOpen) {\n      /* With styles we have it requires waiting two animation frames (requestAnimationFrame cycles)\n      before you can focus on an element, so without timeout focus won't be set.\n      When delay is less when 400 content will glitch in some cases. See US574068 for issue description.*/\n      const ANIMATION_DELAY = 400;\n      setTimeout(this.focusOnContent, ANIMATION_DELAY);\n    }\n  };\n\n  handleClose = (propsChanged: boolean, affordance?: string) => {\n    const { returnFocusSelector, setFocusOnClose, onClose } = this.props;\n\n    if (setFocusOnClose) {\n      const elementToFocus = returnFocusSelector\n        ? document.querySelector(returnFocusSelector)\n        : this.initiallyFocusedElement;\n\n      if (elementToFocus) {\n        (elementToFocus as HTMLElement).focus();\n      }\n    }\n\n    if (!propsChanged) {\n      onClose(affordance);\n    }\n  };\n\n  handleOverlayClick = () => {\n    this.handleClose(false, INTERACTIONS_AFFORDANCE.OVERLAY);\n    console.log(\"clicked\");\n  };\n\n  renderOverlay = () => {\n    const { isOpen } = this.props;\n\n    const { drawerOverlayClassName } = Drawer;\n    const overlayClassName = cn(\n      drawerOverlayClassName,\n      isOpen && `${drawerOverlayClassName}--open`\n    );\n    return (\n      <div\n        className={overlayClassName}\n        data-auto=\"drawer-overlay\"\n        onClick={this.handleOverlayClick}\n      />\n    );\n  };\n\n  renderDrawer = () => {\n    const { isOpen, position, children, titleElementId } = this.props;\n    const { drawerClassName } = Drawer;\n    const className = cn(\n      drawerClassName,\n      isOpen && `${drawerClassName}--open`,\n      position === POSITIONS.start && `${drawerClassName}--start-positioned`,\n      position === POSITIONS.end && `${drawerClassName}--end-positioned`\n    );\n\n    return (\n      <div\n        className={className}\n        ref={this.drawerRef}\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-hidden={!isOpen}\n        aria-labelledby={titleElementId}\n        data-auto=\"drawer\"\n        tabIndex={-1}\n      >\n        {children}\n      </div>\n    );\n  };\n\n  render() {\n    // It appears that document can be undefined initially in case of server-side rendering.\n    // Would appreciate any suggestions for more elegant workaround\n    if (typeof document === \"undefined\") {\n      return null;\n    }\n    const drawer = (\n      <>\n        {this.renderOverlay()}\n        {this.renderDrawer()}\n      </>\n    );\n\n    return drawer;\n  }\n}\n\nexport default Drawer;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport { faBars, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport Home from \"./components/home\";\nimport About from \"./components/about\";\nimport Contact from \"./components/contact\";\nimport Drawer from \"./components/drawer\";\n\nimport \"./App.scss\";\n\nclass App extends Component {\n  state = {\n    isOpen: false\n  };\n\n  onToggle = () => this.setState(state => ({ isOpen: !state.isOpen }));\n\n  render() {\n    return (\n      <div className=\"app\">\n        {/* <Drawer\n          isOpen={this.state.isOpen}\n          onClose={this.onToggle}\n          titleElementId={\"fun\"}\n          setFocusOnOpen={true}\n          position={Drawer.POSITIONS.end}\n        >\n          <div className=\"close-drawer\">\n            <button className=\"close-drawer__button\">\n              <FontAwesomeIcon icon={faTimes} onClick={this.onToggle} />\n            </button>\n          </div>\n          <section className=\"links\">\n            <Link to={\"/about\"}>About</Link>\n            <Link to={\"/contact\"}>Contact</Link>\n          </section>\n        </Drawer>\n        <div className=\"menu\" onClick={this.onToggle}>\n          <FontAwesomeIcon icon={faBars} />\n        </div>\n        <div className=\"header\">\n          <div className=\"header__content\">\n            <Link to={\"/\"}>Logo</Link>\n          </div>\n        </div> */}\n        <Switch>\n          <Route exact={true} path=\"/\" component={Home} />\n          <Route exact={true} path=\"/about\" component={About} />\n          <Route exact={true} path=\"/contact\" component={Contact} />\n          <Route path=\"/*\" component={() => <div>Error</div>} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { hydrate } from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nhydrate(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}